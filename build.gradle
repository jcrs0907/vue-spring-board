plugins {
	id 'org.springframework.boot' version '2.6.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	//배포할 때 npm build가 자동으로 수행되도록 설정하기 위해 추가
	id "com.github.node-gradle.node" version "3.1.0"
	id 'java'
}

group = 'com.board'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	//MyBatis 대신 JPA 사용하여 쿼리양을 줄일 수 있다.
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//JWT token 인증을 위해 사용한다.
	// implementation 'org.springframework.boot:spring-boot-starter-security'
	//프론트용 템플릿 엔진
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	//web application을 위해 추가한다.
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
  implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	//getter, setter 등의 함수를 어노테이션을 사용하여 코드양을 줄일 수 있다.
	compileOnly 'org.projectlombok:lombok'
	//프로젝트가 변경되면 자동으로 재시작해준다.
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	// runtimeOnly 'mysql:mysql-connector-java'
  runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

test {
	useJUnitPlatform()
}

node {
	version = '14.17.5'
	npmVersion = '6.14.14'
	download = true
	workDir = file("${project.buildDir}/vue")
	npmWorkDir = file("${project.buildDir}/vue")
}

//빌드 파일 삭제
task deleteVueArtifact(type: Delete) {
	delete "src/main/resources/static"
}

//npm install
task vueNpmInstall(type: NpmTask) {
	workingDir = file("${project.projectDir}/vue")
	args = ['install']
}

//npm run build
task npmBuild(type: NpmTask, dependsOn: ['deleteVueArtifact', 'vueNpmInstall']) {
	workingDir = file("${project.projectDir}/vue")
	args = ['run', 'build']
}

processResources.dependsOn 'npmBuild'